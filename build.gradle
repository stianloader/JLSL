plugins {
    id 'java'
    id 'maven-publish'
    id 'org.stianloader.interjava' version '0.1.0-a20240512'
}

targetCompatibility = sourceCompatibility = JavaVersion.VERSION_17

group 'org.stianloader'
version '1.0.0'

repositories {
    mavenCentral()
    maven {
        name = "wagyourtail"
        url = "https://maven.wagyourtail.xyz/releases"
    }
}

configurations {
    jvmDowngraderJavaApi
}

dependencies {
    implementation 'org.junit.jupiter:junit-jupiter:5.10.2'

    // Intellij annotations
    compileOnly 'org.jetbrains:annotations:24.1.0'

    // Fastutil
    implementation 'it.unimi.dsi:fastutil:8.5.13'

    // ASM
    implementation 'org.ow2.asm:asm-tree:9.7'
    implementation 'org.ow2.asm:asm:9.7'
    implementation 'org.ow2.asm:asm-util:9.7'

    // Java 8 APIs required by jvmDowngrader
    jvmDowngraderJavaApi (group: 'xyz.wagyourtail.jvmdowngrader', name: 'jvmdowngrader-java-api', version: '0.1.3', classifier: 'downgraded-8')
}

task downgradedJar(type: org.stianloader.interjava.DowngradedArchiveTask, dependsOn: jar) {
    from(zipTree(jar.archiveFile))
    archiveVersion = jar.archiveVersion
    archiveBaseName = jar.archiveBaseName

    targetVersion = 8
    sourceSets.main.compileClasspath.each { classpathEntry ->
        compileClassPath.from(zipTree(classpathEntry))
    }
}

configurations {
    downgradedJar {
        canBeConsumed = true
        canBeResolved = false
        attributes {
            attribute(Category.CATEGORY_ATTRIBUTE, objects.named(Category, Category.LIBRARY))
            attribute(Usage.USAGE_ATTRIBUTE, objects.named(Usage, Usage.JAVA_RUNTIME))
            attribute(Bundling.BUNDLING_ATTRIBUTE, objects.named(Bundling, Bundling.EXTERNAL))
            attribute(TargetJvmVersion.TARGET_JVM_VERSION_ATTRIBUTE, 8)
            attribute(LibraryElements.LIBRARY_ELEMENTS_ATTRIBUTE, objects.named(LibraryElements, 'jar'))
        }
        artifacts {
            downgradedJar
        }

        outgoing {
            artifact tasks['downgradedJar']
        }

        extendsFrom configurations['implementation']
        extendsFrom configurations['jvmDowngraderJavaApi']
    }
}

test {
    useJUnitPlatform()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

jar {
    archiveClassifier = "j17"
}

build {
    dependsOn(downgradedJar)
}

components {
    java {
        addVariantsFromConfiguration(configurations['downgradedJar']) {
            mapToMavenScope("runtime")
        }
    }
}

publishing {
    publications {
        plugin(MavenPublication) { publication ->
            groupId project.group
            artifactId project.archivesBaseName
            version version

            from components['java']
            artifact sourcesJar
        }
    }
    repositories {
        if (System.getProperty('publishRepo') != null) {
            maven {
                url System.getProperty('publishRepo')
                allowInsecureProtocol = true
            }
        } else {
            mavenLocal()
        }
    }
}

publish {
    dependsOn(downgradedJar)
}
